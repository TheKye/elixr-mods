using System;
using System.Collections.Generic;
using System.Text;

// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.EM.Food.Cafe
{
    using System.Collections.Generic;
    using Eco.Core.Items;
    using Eco.EM.Framework.Resolvers;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Mods.TechTree;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;

    [Serialized]
    [LocDisplayName("Papaya Milkshake")]
    [Weight(300)]
    [Ecopedia("Food", "Cooking", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    public partial class PapayaMilkshakeItem : FoodItem, IConfigurableFoodItem
    {
        public override LocString DisplayNamePlural => Localizer.DoStr("Papaya Milkshake");
        public override LocString DisplayDescription => Localizer.DoStr("Papaya blended in milk.");

        private static readonly FoodItemModel defaults = new(typeof(PapayaMilkshakeItem), "Mayonaise", calories: 1200, carbs: 3, fat: 3, protein: 10, vitamins: 5);

        public override float Calories => EMFoodItemResolver.Obj.ResolveCalories(this);
        public override Nutrients Nutrition => EMFoodItemResolver.Obj.ResolveNutrients(this);
        static PapayaMilkshakeItem() => EMFoodItemResolver.AddDefaults(defaults);
    }

    [RequiresSkill(typeof(CookingSkill), 4)]
    public partial class PapayaMilkshakeRecipe : RecipeFamily, IConfigurableRecipe
    {
        static RecipeDefaultModel Defaults => new()
        {
            ModelType = typeof(PapayaMilkshakeRecipe).Name,
            Assembly = typeof(PapayaMilkshakeRecipe).AssemblyQualifiedName,
            HiddenName = "Papaya Milkshake",
            LocalizableName = Localizer.DoStr("Papaya Milkshake"),
            IngredientList = new()
            {
                new EMIngredient("IceCreamItem", false, 4),
                new EMIngredient("PapayaItem", false, 4),
                new EMIngredient("Milk", true, 4),
                new EMIngredient("Sugar", true, 4)
            },
            ProductList = new()
            {
                new EMCraftable("PapayaMilkshakeItem", 4),
            },
            BaseExperienceOnCraft = 1,
            BaseLabor = 50,
            LaborIsStatic = false,
            BaseCraftTime = 0.5f,
            CraftTimeIsStatic = false,
            CraftingStation = "BlenderItem",
            RequiredSkillType = typeof(CookingSkill),
            RequiredSkillLevel = 2,
        };

        static PapayaMilkshakeRecipe() { EMRecipeResolver.AddDefaults(Defaults); }

        public PapayaMilkshakeRecipe()
        {
            this.Recipes = EMRecipeResolver.Obj.ResolveRecipe(this);
            this.LaborInCalories = EMRecipeResolver.Obj.ResolveLabor(this);
            this.CraftMinutes = EMRecipeResolver.Obj.ResolveCraftMinutes(this);
            this.ExperienceOnCraft = EMRecipeResolver.Obj.ResolveExperience(this);
            this.Initialize(Defaults.LocalizableName, GetType());
            CraftingComponent.AddRecipe(EMRecipeResolver.Obj.ResolveStation(this), this);
        }
    }
}
